name: Get Latest Tag
description: Get latest parent/global tag for commit
inputs:
  do-checkout:
    description: do repo checkout
    default: 'true'
    required: false
  default-tag:
    description: set tag if nothing found
    default: '0.0.0'
    required: false
  do-tag-create:
    description: create new tag
    default: 'false'
    required: false
  increment:
    description: increment step
    default: '1'
    required: false
outputs:
  tag:
    value: ${{ steps.get-tag.outputs.tag}}
    description: latest tag

runs:
  using: composite
  steps:
    - name: do checkout
      if: inputs.do-checkout != 'false'
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        fetch-tags: true
        sparse-checkout: |
          version.txt

    - name: get tag
      id: get-tag
      shell: bash
      run: |
        # get latest tag
        set -x +e
        # getting latest parent taggithub.event.number
        eval "$( git describe --tags --long --first-parent ${GITHUB_SHA} | sed -r 's/^((v?([0-9]+))(\.([0-9]+)(\.([0-9]+)(.*))?)?)-([0-9]+)-[0-9a-h]+$/parent_tag=\1;parent_prefix=\2;parent_major=\3;parent_minor=\5;parent_patch=\7;parent_extra=\8;parent_tag_offset=\9;/' )"
        echo "offset ${parent_tag_offset}"
        if [ "${parent_tag_offset}" -eq 0 ] ; then
          # this commit already has tag
          echo "tag=${parent_tag}" | tee -a "${GITHUB_OUTPUT}"
          echo "skip_creation=true" | tee -a "${GITHUB_OUTPUT}"
          exit
        fi
        new_tag="${parent_prefix:-0}.${parent_minor:-0}.$(( ${parent_patch:-0} + ${{ inputs.increment }} ))${parent_extra}"
        # check if new tag exist
        tag="$( git tag --list "${new_tag}" )"
        if [ -n "${tag}" ] ; then
          # tag found, we need increase patch
          latest_tag_patch="$( git tag --list "${parent_prefix}.${parent_minor:-0}.*${parent_extra}" | sort --version-sort | tail -n 1 | sed -r 's/^[^.][0-9]*\.[0-9]+\.([0-9]+)[^0-9]?.*$/\1/' )"
          new_tag="${parent_prefix}.${parent_minor:-0}.$(( ${latest_tag_patch:-0} + ${{ inputs.increment }} ))${parent_extra}"
        fi
        echo "tag=${new_tag}" | tee -a "${GITHUB_OUTPUT}"

    - name: create tag
      if: ${{ inputs.do-tag-create != 'false' && steps.get-tag.outputs.skip_creation != 'true' }}
      shell: bash
      env:
        TAG: ${{ steps.get-tag.outputs.tag}}
      run: |
        # do tag create
        set -x
        git tag ${TAG}
        git push origin ${TAG}

